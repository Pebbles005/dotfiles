super + Up
    pactl set-sink-volume @DEFAULT_SINK@ +5%

super + Down
    pactl set-sink-volume @DEFAULT_SINK@ -5%

super + m
    pactl set-sink-mute @DEFAULT_SINK@ toggle; pactl set-source-mute @DEFAULT_SOURCE@ toggle && notify-send "Volume and mic is muted"

super + Right
    brightnessctl set +10% && notify-send --hint=string:x-dunst-stack-tag:brightness-notification "Brightness is at $(($(brightnessctl g) * 100 / $(brightnessctl m)))%"

super + Left
    brightnessctl set 10%- && notify-send --hint=string:x-dunst-stack-tag:brightness-notification "Brightness is at $(($(brightnessctl g) * 100 / $(brightnessctl m)))%"

alt + t
    kitty

alt + s 
    rofi -show drun

alt + v 
    pavucontrol -t 4

alt + F4
    $HOME/.config/rofi/scripts/rofi-powermenu

alt + c
    rofi -show calc -no-show-match -no-sort -no-history -lines 0 -theme-str "element.selected.normal \{ background-color:#00000000; \} entry \{ placeholder : \"Type to Calculate\"; \}"

@Print
    maim -s -c 255,246,224,0.3 -u -l -B "$HOME/Pictures/screenshot-$(date +%Y-%m-%d-%H-%M-%S).png" && notify-send "Screenshot Taken"

alt + @Print 
    maim -u "$HOME/Pictures/screenshot-$(date +%Y-%m-%d-%H-%M-%S).png" && notify-send "Screenshot Taken"

alt + e
    kitty lflayer

# quit/restart bspwm
alt + shift + r
    bspc wm -r 

# close or kill
alt + {x,q}
	{$HOME/.config/bspwm/scripts/custom_node_remove_event,bspc node -c }

# focus the node in the given direction
alt + {h,j,k,l}
    $HOME/.config/bspwm/scripts/window_edit --focus {west,south,north,east}

alt + {Left,Down,Up,Right}
    $HOME/.config/bspwm/scripts/window_edit --focus {west,south,north,east}

alt + space
    [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" != "resize" ] && $HOME/.config/bspwm/scripts/window_edit --focus-state

# move the node in the given direction
alt + shift + {h,j,k,l}
    [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" != "resize" ] && $HOME/.config/bspwm/scripts/window_edit --move {west,south,north,east} 

alt + shift + {Left,Down,Up,Right}
    [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" != "resize" ] && $HOME/.config/bspwm/scripts/window_edit --move {west,south,north,east} 

# focus the last node/desktop
alt + Tab
    bspc desktop -f last.occupied

# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}' --follow

# resizing windows
alt + r
    bspc query -N -n .window.local > /dev/null && $HOME/.config/bspwm/scripts/window_resize_state --toggle

alt + Escape
    $HOME/.config/bspwm/scripts/window_resize_state --reset

# set the window state
alt + shift + space
    [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" != "resize" ] && bspc query -N -n focused.floating.local && bspc node -t tiled || bspc node -t floating

# Toggle fullscreen state of the focused window
alt + shift + f
    [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" != "resize" ] && bspc node -t ~fullscreen

bspc config pointer_action1 move
