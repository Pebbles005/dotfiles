# lfrc
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/preview'
set shell bash
set ignorecase 
set icons 
set relativenumber

# set '-eu' options for shell commands
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# Use the `dim` attribute instead of underline for the cursor in the preview pane
set cursorpreviewfmt "\033[7;2m"

# use enter for shell commands
map <enter> shell

# show the result of execution of previous commands
map ` !true

# execute current file (must be executable)
map x $$f
map X !$f


# define a custom 'open' command
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) nvim "$f";;
        application/x-executable) "$f";;
        *) xdg-open "$f" ;;
    esac
}}

# dedicated keys for file opener actions
map o open
map O $mimeopen --ask $f
# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>


# define a custom 'delete' command
cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

# extract the current file with the right command
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}


map D delete
map <backspace> set hidden!
map E extract
