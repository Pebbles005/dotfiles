#!/bin/sh

HideBar() {
    xdo hide -a "lemonbar"
}

ShowBar() {
    xdo show -a "lemonbar"
}

HideNodes() {
    for node in $1; do
        bspc node "$node" -g hidden=on
    done
}

HideTiled() {
    Nodes=$(bspc query -N -n .window -d "$1" | grep -v $(bspc query -N -n focused))
    HideNodes "$Nodes"
}

ShowNodes() {
    Nodes=$(bspc query -N -n .hidden -d "$1")

    for node in $Nodes; do
        bspc node "$node" -g hidden=off
    done
}

ResetResizeState() {
    if [ "$($HOME/.config/bspwm/scripts/window_resize_state --get)" = "resize" ]; then
        $HOME/.config/bspwm/scripts/window_resize_state --reset
    fi
}

PrimaryMonitor=$(bspc query -M -m)

bspc subscribe node_state | while read -r Event Monitor Desktop Node State Active; do
    # Hide bar and nodes when node becomes fullscreen, otherwise show
    if [ "$State" = "fullscreen" ] && [ "$Active" = "on" ]; then
        # Only consider nodes on primary monitor
        if [ "$PrimaryMonitor" = "$Monitor" ]; then
            HideBar
        fi
        HideTiled "$Desktop"
    else
        if [ "$PrimaryMonitor" = "$Monitor" ]; then
            ShowBar
        fi
        ShowNodes "$Desktop"
    fi
done &

bspc subscribe node_remove | while read -r Event Monitor Desktop Node; do
    # Show bar if no nodes are fullscreen on current desktop
    if [ "$Monitor" = "$PrimaryMonitor" ] &&
        [ -z "$(bspc query -N -n .fullscreen -d "$Desktop")" ]; then
        ShowBar
    fi
    ShowNodes "$Desktop"
done &

# Function to create temporary file if it doesn't exist
if [ ! -f /tmp/custom_bspwm_events ]; then
    touch /tmp/custom_bspwm_events
fi
tail -f /tmp/custom_bspwm_events | while read -r Event Monitor Desktop Node; do
    # Show bar if no nodes are fullscreen on current desktop
    if [ "$Monitor" = "$PrimaryMonitor" ] &&
        [ -z "$(bspc query -N -n .fullscreen -d "$Desktop")" ]; then
        ShowBar
    fi
    ShowNodes "$Desktop"
done &

bspc subscribe node_transfer | while read -r Event SrcMonitor SrcDesktop SrcNode DestMonitor DestDesktop DestNode; do
    # Show nodes on src desktop and hide nodes on dest desktop
    if [ -n "$(bspc query -N -n "$SrcNode".fullscreen)" ]; then
        ShowNodes "$SrcDesktop"
        ShowBar
        bspc node "$SrcNode" -t ~fullscreen
    fi

    FullscreenDest=$(bspc query -N -n .fullscreen -d "$DestDesktop")
    if [ -n "$FullscreenDest" ]; then
        bspc node "$SrcNode" -g hidden=on
    fi
    ResetResizeState
done &

bspc subscribe desktop_focus | while read -r Event Monitor Desktop; do
    FullscreenNode="$(bspc query -N -n .fullscreen -d "$Desktop")"

    # Only consider nodes on primary monitor
    if [ "$PrimaryMonitor" = "$Monitor" ]; then
        if [ -n "$FullscreenNode" ]; then
            HideBar
        else
            ShowBar
        fi
    fi
    ResetResizeState
done &
